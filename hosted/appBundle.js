(()=>{var e={603:e=>{const t=e=>{alert(e)};e.exports={handleError:t,sendPost:async(e,a,r)=>{const c=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),n=await c.json();n.redirect&&(window.location=n.redirect),n.error&&t(n.error),r&&r(n)},hideError:()=>{}}}},t={};function a(r){var c=t[r];if(void 0!==c)return c.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,a),n.exports}(()=>{const e=a(603),t=t=>{t.preventDefault();const a=t.target.querySelector("#productName").value,r=t.target.querySelector("#productDescription").value,c=t.target.querySelector("#_csrf").value;if(!a||!r)return e.handleError("A name and description are required for this product."),!1;e.sendPost(t.target.action,{name:a,description:r,_csrf:c},(()=>{console.log("Product Created!")})),location.reload()},r=t=>{t.preventDefault();const a=t.target.querySelector("#oldPword").value,r=t.target.querySelector("#newPword").value,c=t.target.querySelector("#_csrf").value;if(!a||!r)return e.handleError("Please enter your old password and new password."),!1;e.sendPost(t.target.action,{oldPword:a,newPword:r,_csrf:c},(()=>{console.log("Password updated")}))},c=e=>React.createElement("div",null,React.createElement("h1",{id:"productFormTitle"},"Create Your Product"),React.createElement("form",{id:"productForm",onSubmit:t,name:"productForm",action:"/createProduct",method:"POST",className:"productForm"},React.createElement("label",{htmlFor:"name"},React.createElement("h2",null,"Name:")),React.createElement("input",{id:"productName",name:"name",type:"text",placeholder:"Product Name"}),React.createElement("br",null),React.createElement("label",{htmlFor:"description"},React.createElement("h2",null,"Description:"),React.createElement("textarea",{id:"productDescription",name:"description",type:"text"})),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.props.props.data.csrfToken}),React.createElement("input",{className:"createProductSubmit",type:"submit",value:"Create Product"}))),n=t=>{if(0===t.props.products.length)return React.createElement("div",null,React.createElement("h3",{className:"emptyMarket"},"The marketplace is empty. Fix that by selling something!"));const a=t.props.products.map((t=>React.createElement("div",{key:t._id,className:"marketItem"},React.createElement("img",{src:"/assets/img/shopping-cart.png",alt:"featured product",width:"50px",className:"productImage"}),React.createElement("h2",{className:"productName"},t.name),React.createElement("h3",{className:"productCreator"},"By ",t.user),React.createElement("h4",{className:"productDescription"},t.description),React.createElement("button",{className:"addToCart",onClick:()=>{e.sendPost("addToCart",{product:t},(()=>console.log("Added to cart!")))}},"Add To Cart"))));return React.createElement("div",{className:"productList"},a)},o=async e=>{const t=await fetch(e);return await t.json()},l=async t=>{t.preventDefault();const a=t.target.querySelector("#searchInput").value;if(a)return a.length<1&&e.handleError("Must search for an actual product."),await fetch(`searchFor/?search=${a}`).then((e=>e.json())).then((e=>console.log(e)))},s=()=>React.createElement("div",{className:"search"},React.createElement("form",{id:"searchForm",onSubmit:l,name:"searchForm",action:"/searchFor",method:"GET",className:"searchForm"},React.createElement("div",{className:"searchInputContainer"},React.createElement("input",{type:"text",id:"searchInput",className:"searchInput",placeholder:"Search for a product..."}),React.createElement("div",{className:"searchImageHandler"},React.createElement("input",{className:"searchProductSubmit",name:"submit",type:"image",src:"/assets/img/search-icon.png",alt:"submit"}))))),d=e=>{const t=e.props.props.userProducts.map((e=>React.createElement("div",{key:e._id,className:"marketItem"},React.createElement("h2",null,e.name),React.createElement("p",null,e.description),React.createElement("button",{id:"deleteButton",onClick:()=>(async e=>{const t=(await fetch(`/deleteProduct/?id=${e}`)).json();return console.log(t),location.reload(),null})(e._id)},"Delete Product"))));return React.createElement("div",null,t)},m=()=>{const[e,t]=React.useState(!1);return(async()=>{fetch("/getPremiumStatus").then((e=>e.json())).then((e=>{e[0].isPremium?t(!0):e[0].isPremium||t(!1)}))})(),e?e?React.createElement("div",null,React.createElement("button",{className:"linkButton",onClick:async()=>{(async()=>{fetch("/downgrade").then((()=>{t(!1)}))})()}},"Cancel Plan")):void 0:React.createElement("div",null,React.createElement("button",{className:"linkButton",onClick:async()=>{(async()=>{fetch("/upgrade").then((()=>{t(!0)}))})()}},"Upgrade to Premium"))},u=e=>React.createElement("form",{id:"pwordChange",onSubmit:r,name:"changeForm",action:"/changePassword",method:"POST",className:"pwordChangeForm"},React.createElement("label",null,"Enter old password: "),React.createElement("input",{id:"oldPword",type:"text"}),React.createElement("label",null,"Enter new password: "),React.createElement("input",{id:"newPword",type:"text"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"changePasswordSubmit",type:"submit",value:"Change Password"})),i=()=>React.createElement("button",{className:"linkButton",id:"pwordChangeButton"},"Password"),p=t=>{const[a,r]=React.useState(!0),[o,l]=React.useState(!1),[s,m]=React.useState(!1),[u,i]=React.useState(!1);return a?React.createElement("div",null,React.createElement("button",{id:"create-product",onClick:()=>{r(!1),l(!0),i(!1)}},"Create Product"),React.createElement("button",{id:"load-user",onClick:()=>{m(!0),r(!1),l(!1),i(!1)}},"Your Products"),React.createElement(n,{props:t.props})):o?React.createElement("div",null,React.createElement("button",{id:"marketplace",onClick:()=>{r(!0),l(!1),i(!1)}},"To Marketplace"),React.createElement("button",{id:"load-user",onClick:()=>{m(!0),r(!1),l(!1),i(!1)}},"Your Products"),React.createElement(c,{props:t})):s?React.createElement("div",null,React.createElement("button",{id:"create-product",onClick:()=>{r(!1),l(!0),m(!1),i(!1)}},"Create Product"),React.createElement("button",{id:"marketplace",onClick:()=>{r(!0),l(!1),m(!1),i(!1)}},"To Marketplace"),React.createElement("h1",null,"Your products"),React.createElement(d,{props:t})):void(u&&(r(!1),l(!1),m(!1),searchResults.map((t=>React.createElement("div",{key:t._id,className:"marketItem"},React.createElement("h1",null,t.name),React.createElement("h2",null,"By ",t.name),React.createElement("h3",null,t.description),React.createElement("button",{className:"addToCart",onClick:()=>{e.sendPost("addToCart",{product},(()=>console.log("Added to cart!")))}},"Add To Cart"))))))};window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json(),a={data:t,products:await o("/getProducts"),userProducts:await o("/getUserProducts")};ReactDOM.render(React.createElement(p,{props:a}),document.getElementById("main")),ReactDOM.render(React.createElement(s,null),document.querySelector(".searchBar")),ReactDOM.render(React.createElement(m,null),document.querySelector(".premium")),ReactDOM.render(React.createElement(u,{csrf:t.csrfToken}),document.querySelector(".passwordChange")),ReactDOM.render(React.createElement(i,null),document.querySelector(".passwordChange"))}})()})();